<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2015-02-05T09:00:00+09:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>goqueryでHTMLをパースする</title>
    <link rel="alternate" href="http://blog.url.com/archives/988.html"/>
    <id>http://blog.url.com/archives/988.html</id>
    <published>2015-02-05T09:00:00+09:00</published>
    <updated>2015-02-09T19:02:53+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;HTMLのパースをするならgoquery！goquery便利すぎて泣いた。
jQueryっぽく使えて良いです。&lt;/p&gt;

&lt;p&gt;まずは&lt;a href="https://github.com/PuerkitoBio/goquery"&gt;goquery&lt;/a&gt;を入れましょう。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;% go get github.com/PuerkitoBio/goquery
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;HTMLをパースする&lt;/h2&gt;

&lt;p&gt;それではパースしてみましょう。
HTMLのパースのやり方はいくつかあります。&lt;/p&gt;

&lt;h3&gt;URLから直接パースする&lt;/h3&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="n"&gt;goquery&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewDocument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"http://yahoo.co.jp"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="x"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;文字列をパースする&lt;/h3&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="s"&gt;`&amp;lt;h1 class="heading"&amp;gt;見出し&amp;lt;/h1&amp;gt;`&lt;/span&gt;&lt;span class="x"&gt;
&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="n"&gt;strings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewReader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="x"&gt;
&lt;/span&gt;&lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="n"&gt;goquery&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewDocumentFromReader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="x"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;パースしたHTMLから要素を取り出す&lt;/h2&gt;

&lt;p&gt;goqueryでパースしたHTMLから要素を取り出してみましょう&lt;/p&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;".heading"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="c"&gt;//=&amp;gt; 見出し&lt;/span&gt;&lt;span class="x"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;こんな感じでとっても簡単です。&lt;/p&gt;

&lt;h2&gt;goqueryのひと通りの操作のテストを書く&lt;/h2&gt;

&lt;p&gt;goqueryのテストをざっくり書いてみるとこうなります。&lt;/p&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="x"&gt;

&lt;/span&gt;&lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="x"&gt;
    &lt;/span&gt;&lt;span class="s"&gt;"github.com/PuerkitoBio/goquery"&lt;/span&gt;&lt;span class="x"&gt;
    &lt;/span&gt;&lt;span class="s"&gt;"strings"&lt;/span&gt;&lt;span class="x"&gt;
    &lt;/span&gt;&lt;span class="s"&gt;"testing"&lt;/span&gt;&lt;span class="x"&gt;
&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="x"&gt;

&lt;/span&gt;&lt;span class="k"&gt;func&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="n"&gt;TestParseHtml&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;testing&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="x"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="s"&gt;`
&amp;lt;section&amp;gt;
&amp;lt;h1 class="heading"&amp;gt;うんこっこ&amp;lt;/h1&amp;gt;
&amp;lt;p class="lead"&amp;gt;なんかにおうってばよ&amp;lt;/p&amp;gt;
&amp;lt;/section&amp;gt;
`&lt;/span&gt;&lt;span class="x"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="n"&gt;strings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewReader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="x"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="n"&gt;goquery&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewDocumentFromReader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="x"&gt;

    &lt;/span&gt;&lt;span class="n"&gt;docHeading&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;".heading"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="x"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;heading&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="s"&gt;"うんこっこ"&lt;/span&gt;&lt;span class="x"&gt;

    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="n"&gt;docHeading&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="n"&gt;heading&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="x"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Errorf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"got %v want %v"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="n"&gt;docHeading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="n"&gt;heading&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="x"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="x"&gt;

    &lt;/span&gt;&lt;span class="n"&gt;docLead&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;".lead"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="x"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;lead&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="s"&gt;"なんかにおうってばよ"&lt;/span&gt;&lt;span class="x"&gt;

    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="n"&gt;docLead&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="n"&gt;lead&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="x"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Errorf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"got %v want %v"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="n"&gt;docLead&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="n"&gt;lead&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="x"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="x"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="x"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;goのテスト実行コマンドで実行してみましょう。&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;% &lt;/span&gt;go &lt;span class="nb"&gt;test&lt;/span&gt; -v
&lt;span class="o"&gt;===&lt;/span&gt; RUN TestParseHtml
--- PASS: TestParseHtml &lt;span class="o"&gt;(&lt;/span&gt;0.00s&lt;span class="o"&gt;)&lt;/span&gt;
PASS
ok
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;こんな感じで動けばテスト完了です。
今回のテストコードは&lt;a href="https://github.com/funnythingz/go-test/blob/master/goquery_test.go"&gt;GitHub&lt;/a&gt;にもあげました。&lt;/p&gt;

&lt;p&gt;テスト、だいじだよ、テスト。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>インストールしたGoパッケージを最新にする</title>
    <link rel="alternate" href="http://blog.url.com/archives/987.html"/>
    <id>http://blog.url.com/archives/987.html</id>
    <published>2015-02-04T09:00:00+09:00</published>
    <updated>2015-02-09T19:02:53+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;go get でインストールしたパッケージたちを一気にアップグレードする。&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;% &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$GOPATH&lt;/span&gt;
&lt;span class="gp"&gt;% &lt;/span&gt;go clean -i ./...
&lt;span class="gp"&gt;% &lt;/span&gt;go install ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これでいけた！&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Golangでbluemondayを使ってhtml_safeなsanitizeをする</title>
    <link rel="alternate" href="http://blog.url.com/archives/986.html"/>
    <id>http://blog.url.com/archives/986.html</id>
    <published>2015-01-25T09:00:00+09:00</published>
    <updated>2015-02-09T19:02:53+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;ここ数年ブログを書くのが億劫すぎていたのでまさかの1日2連続エントリーです。2015年はブログもちゃんと書くぞ！&lt;/p&gt;

&lt;p&gt;&lt;a href="http://hiropo.co.uk/archives/985.html"&gt;GolangでBlackfridayを使ってMarkdownをHTMLに変換する&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;上記記事でも軽くふれたのですが、sanitizerの&lt;a href="https://github.com/microcosm-cc/bluemonday"&gt;microcosm-cc/bluemonday&lt;/a&gt;も便利なので(名前が鬱になるけど)使ってみました。&lt;/p&gt;

&lt;h3&gt;html&lt;/h3&gt;

&lt;p&gt;hoge.html&lt;/p&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;hoge&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;hogehoge&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;style&amp;gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;footer&amp;gt;&lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;copy;&lt;/span&gt; funnythingz&lt;span class="nt"&gt;&amp;lt;/footer&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Go&lt;/h3&gt;

&lt;p&gt;demo.go&lt;/p&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="x"&gt;

&lt;/span&gt;&lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="x"&gt;
    &lt;/span&gt;&lt;span class="s"&gt;"fmt"&lt;/span&gt;&lt;span class="x"&gt;
    &lt;/span&gt;&lt;span class="s"&gt;"github.com/microcosm-cc/bluemonday"&lt;/span&gt;&lt;span class="x"&gt;
    &lt;/span&gt;&lt;span class="s"&gt;"io/ioutil"&lt;/span&gt;&lt;span class="x"&gt;
&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="x"&gt;

&lt;/span&gt;&lt;span class="k"&gt;func&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="kt"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="x"&gt;
    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="x"&gt;
        &lt;/span&gt;&lt;span class="nb"&gt;panic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="x"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="x"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="x"&gt;

&lt;/span&gt;&lt;span class="k"&gt;func&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="x"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="n"&gt;ioutil&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ReadFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"hoge.html"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="x"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="x"&gt;

    &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="n"&gt;bluemonday&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UGCPolicy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="x"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sanitize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;([]&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;&lt;span class="x"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="x"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;出力結果&lt;/h3&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;% &lt;/span&gt;go run demo.go
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で実行すると&lt;/p&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;hoge&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;hogehoge&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;


© funnythingz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;となってhtml_safeな感じで出力されます。ちなみにbluemondayのポリシーで許可されているタグは下記になります。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;article, aside, figure, section, summary, h1~h6, hgroup, br, div, hr, p, span, wbr, abbr, acronym, cite, code, dfn, em, figcaption, mark, s, samp, strong, sub, sup, var, b, i, pre, small, strike, tt, u, rp, rt, ruby&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;詳細は&lt;a href="https://github.com/microcosm-cc/bluemonday/blob/master/policies.go"&gt;bluemondayのコード&lt;/a&gt;をみてみてください。&lt;/p&gt;

&lt;p&gt;こんな感じでblackfridayとbluemondayを組み合わせて使うといろいろできそうですね！&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>GolangでBlackfridayを使ってMarkdownをHTMLに変換する</title>
    <link rel="alternate" href="http://blog.url.com/archives/985.html"/>
    <id>http://blog.url.com/archives/985.html</id>
    <published>2015-01-25T09:00:00+09:00</published>
    <updated>2015-02-09T19:02:53+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Rails大好きfunnythingzです。TypeScriptよりもRails書いてます。&lt;/p&gt;

&lt;p&gt;Railsに慣れすぎてしまうと他のことができなくなってやばいと思い2015年はGolangに力を入れていこうと思っています。Go界隈の流れの早さについていけていません。&lt;/p&gt;

&lt;p&gt;それはさておきGoでMarkdownをHTMLにしたいなと思いGitHubをいろいろ探していたら&lt;a href="https://github.com/russross/blackfriday"&gt;russross/blackfriday&lt;/a&gt;というものを見つけました。名前が中二感ハンパなくてカッコイイです。sanitizerの&lt;a href="https://github.com/microcosm-cc/bluemonday"&gt;microcosm-cc/bluemonday&lt;/a&gt;というものもあります。名前カッコイイわー。&lt;/p&gt;

&lt;p&gt;とりあえず使い方は簡単なのでコード書いておきます。&lt;/p&gt;

&lt;h3&gt;markdown&lt;/h3&gt;

&lt;p&gt;hoge.md&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# hoge

hogehoge

- hoge
- hoge

## hoge
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Go&lt;/h3&gt;

&lt;p&gt;demo.go&lt;/p&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="x"&gt;

&lt;/span&gt;&lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="x"&gt;
    &lt;/span&gt;&lt;span class="s"&gt;"fmt"&lt;/span&gt;&lt;span class="x"&gt;
    &lt;/span&gt;&lt;span class="s"&gt;"github.com/russross/blackfriday"&lt;/span&gt;&lt;span class="x"&gt;
    &lt;/span&gt;&lt;span class="s"&gt;"io/ioutil"&lt;/span&gt;&lt;span class="x"&gt;
&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="x"&gt;

&lt;/span&gt;&lt;span class="k"&gt;func&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="kt"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="x"&gt;
    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="x"&gt;
        &lt;/span&gt;&lt;span class="nb"&gt;panic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="x"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="x"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="x"&gt;

&lt;/span&gt;&lt;span class="k"&gt;func&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="x"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;md&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="n"&gt;ioutil&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ReadFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"hoge.md"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="x"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="x"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="n"&gt;blackfriday&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MarkdownCommon&lt;/span&gt;&lt;span class="p"&gt;([]&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;md&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="x"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="x"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="x"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;出力結果&lt;/h3&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;% &lt;/span&gt;go run demo.go
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で実行すると&lt;/p&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;hoge&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;hogehoge&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;hoge&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;hoge&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;hoge&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;となります。簡単！&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>RapberryPi B+ セットアップメモ</title>
    <link rel="alternate" href="http://blog.url.com/archives/984.html"/>
    <id>http://blog.url.com/archives/984.html</id>
    <published>2014-12-01T09:00:00+09:00</published>
    <updated>2015-01-30T12:54:24+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;先日秋葉原で&lt;a href="http://hiropo.co.uk/archives/980.html"&gt;Intel Edison&lt;/a&gt;の他にRaspberryPi B+ も買ったのでbotサーバーでもつくろうと思っている。&lt;/p&gt;

&lt;p&gt;とりあえずセットアップしたことをメモっていく。&lt;/p&gt;

&lt;h2&gt;環境&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Raspberry Pi B+&lt;/li&gt;
&lt;li&gt;Raspbian&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;初期設定&lt;/h2&gt;

&lt;p&gt;起動したらいきなり初期設定が立ち上がっている場合もある。&lt;/p&gt;

&lt;p&gt;初期設定画面が出なかったらログインして初期設定を行う&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;user: pi
pass: raspberry
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;初期設定を行うには&amp;lsquo;raspi-config&amp;#39;を実行する&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;% raspi-config
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;SSHの設定でつまずいた件&lt;/h3&gt;

&lt;p&gt;&amp;#39;raspi-config&amp;rsquo; でSSHを設定する際に、&amp;#39;Initial ssh key generation still running. Please wait and try again.&amp;rsquo; というエラーメッセージに遭遇。
下記の対応をすることで解決されるんだけど、非常にめんどくさすぎる。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;% sudo rm /var/log/regen_ssh_keys.log
% sudo rm /etc/ssh/ssh_host*
% sudo ssh-keygen -A
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;不要なファイルを削除する&lt;/h2&gt;

&lt;p&gt;bot用途で使おうと思っているのでGUI系のソースとかは要らないので片っ端から削除していく。
削除したファイルは下記の通り。シェルスクリプトにして実行するとラクになる。&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#!/bin/sh&lt;/span&gt;

sudo apt-get autoremove -y scratch
sudo apt-get autoremove -y midori
sudo apt-get autoremove -y omxplayer
sudo apt-get autoremove -y galculator
sudo apt-get autoremove -y xpdf
sudo apt-get autoremove -y dillo
sudo apt-get autoremove -y debian-reference-common
sudo apt-get autoremove -y netsurf-common
sudo apt-get autoremove -y netsurf-gtk
sudo apt-get autoremove -y x11-common
sudo apt-get autoremove -y python&lt;span class="k"&gt;*&lt;/span&gt;
sudo apt-get autoremove -y lxde-icon-theme
sudo apt-get autoremove -y psmisc
sudo apt-get autoremove -y idle-python3.2
sudo apt-get autoremove -y python
sudo apt-get autoremove -y python3
sudo apt-get autoremove -y python2.7
sudo apt-get autoremove -y python2.7-minimal
sudo apt-get autoremove -y lxde-common
sudo apt-get autoremove -y lxdeterminal
sudo apt-get autoremove -y hicolor-icon-theme 
sudo apt-get autoremove -y xarchiver
sudo apt-get autoremove -y libpoppler19
sudo apt-get autoremove -y ed
sudo apt-get autoremove -y lxsession
sudo apt-get autoremove -y lxappearance
sudo apt-get autoremove -y lxpolkit
sudo apt-get autoremove -y lxrandr
sudo apt-get autoremove -y lxsession-edit
sudo apt-get autoremove -y lxshortcut
sudo apt-get autoremove -y lxtask
sudo apt-get autoremove -y lxterminal
sudo apt-get autoremove -y xauth
sudo apt-get autoremove -y samba-common
sudo apt-get autoremove -y fontconfig
sudo apt-get autoremove -y fontconfig-config
sudo apt-get autoremove -y fonts-freefont-ttf
sudo apt-get autoremove -y dbus-x11
sudo apt-get autoremove -y desktop-base
sudo apt-get autoremove -y desktop-file-utils
sudo apt-get autoremove -y libxmuu1
sudo apt-get autoremove -y
sudo apt-get -y clean

sudo rm -rf /home/pi/python_games
sudo rm -rf /home/pi/Desktop
sudo rm -rv /usr/share/wallpapers/
sudo rm -rf /usr/share/sounds/
sudo rm -rv /usr/share/icons/&lt;span class="k"&gt;*&lt;/span&gt;
sudo rm -rv /opt/vc/src/&lt;span class="k"&gt;*&lt;/span&gt;
sudo rm -rv /opt/&lt;span class="k"&gt;*&lt;/span&gt;
sudo rm -rv /usr/share/icons/&lt;span class="k"&gt;*&lt;/span&gt;
sudo rm -rv /usr/games/
sudo rm -rv /usr/share/squeak/
sudo rm -rv /usr/share/themes
sudo rm -rv /usr/share/kde4
sudo rm -rv /usr/share/images/&lt;span class="k"&gt;*&lt;/span&gt;
sudo rm -rf /opt/vc/src/&lt;span class="k"&gt;*&lt;/span&gt;
sudo rm -rf /usr/share/icons/&lt;span class="k"&gt;*&lt;/span&gt;
sudo rm -rf /usr/share/squeak/
sudo rm -rf /usr/share/themes
sudo rm -rf /usr/share/kde4
sudo rm -rf /usr/share/images/&lt;span class="k"&gt;*&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;パッケージを更新する&lt;/h2&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;% sudo apt-get autoremove
% sudo apt-get update
% sudo apt-get dist-upgrade
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;必要に応じてパッケージをインストールする&lt;/h2&gt;

&lt;h3&gt;vim&lt;/h3&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;% sudo apt-get install vim
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;zsh&lt;/h3&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;% sudo apt-get install zsh
% chsh -s `which zsh`
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;oh-my-zsh&lt;/h3&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;% curl -L http://install.ohmyz.sh | sh
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;ruby with rbenv&lt;/h3&gt;

&lt;p&gt;rbenv&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;% git clone https://github.com/sstephenson/rbenv.git ~/.rbenv
% echo 'export PATH="$HOME/.rbenv/bin:$PATH"' &amp;gt;&amp;gt; ~/.zshrc
% echo 'eval "$(rbenv init -)"' &amp;gt;&amp;gt; ~/.zshrc
% source .zshrc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ruby-build&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;% git clone https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;rubyはインストールするバージョンを確認してからインストールする&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;% rbenv install --list
% rbenv install 2.1.5
% rbenv global 2.1.5
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Rubyのbuildは2時間半かかった…。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>MacでGNU版のコマンドをhomebrewでインストールする</title>
    <link rel="alternate" href="http://blog.url.com/archives/983.html"/>
    <id>http://blog.url.com/archives/983.html</id>
    <published>2014-11-19T09:00:00+09:00</published>
    <updated>2015-01-30T12:54:24+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;LinuxだとGNU系なので特に意識せず使えるっぽいのですが、MacはUnixなのでインストールする必要があります。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ brew install coreutils
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで使えるようになります。&lt;/p&gt;

&lt;p&gt;ただし、コマンドの前に &lt;code&gt;g&lt;/code&gt; をつけなくてはいけないのでaliasとかで置き換えると良いかもしれません。&lt;/p&gt;

&lt;p&gt;dateの場合はこんな風に使えます。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ gdate -d '-1 days' +%Y/%m/%d

2014/11/18
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;g&lt;/code&gt; つけるのやっぱり不便だなー。&lt;/p&gt;
</content>
  </entry>
</feed>
